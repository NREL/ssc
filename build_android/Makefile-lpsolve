# ARCH argument like armeabi, armeabi-v7a, arm64-v8a, x86_64

VPATH = ../lpsolve

# finish NDK definition and minimize foe each device - need android version and device


SIM=
ifeq (${ARCH}, i386)
	SIM=true
endif
ifeq (${ARCH}, x86_64)
	SIM=true
endif

ifeq (${SIM}, true)
	ISYSROOT = /Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator.sdk
else
	ISYSROOT = /Applications/Xcode.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/SDKs/iPhoneOS.sdk  
endif

CC = /Users/imacuser/Library/Android/sdk/ndk-bundle/toolchains/arm-linux-androideabi-4.9/prebuilt/darwin-x86_64/bin/arm-linux-androideabi-gcc
CXX = /Users/imacuser/Library/Android/sdk/ndk-bundle/toolchains/arm-linux-androideabi-4.9/prebuilt/darwin-x86_64/bin/arm-linux-androideabi-g++
CFLAGS = -I../  -I../lpsolve -DCHECK_SOLUTION -DYY_NEVER_INTERACTIVE -DPARSER_LP -DINVERSE_ACTIVE=INVERSE_LUSOL -DRoleIsExternalInvEngine  -DWX_PRECOMP -arch ${ARCH} -isysroot ${ISYSROOT}  -miphoneos-version-min=10.0 -fembed-bitcode -DNDEBUG -Os -pipe -fPIC -fno-exceptions  

CFLAGS="\
-fpic -ffunction-sections -funwind-tables -fstack-protector \
-no-canonical-prefixes -march=armv7-a -mfloat-abi=softfp -mfpu=vfpv3-d16 -mthumb \
-fomit-frame-pointer -fno-strict-aliasing -finline-limit=64 -marm -fno-omit-frame-pointer \
-DANDROID -DNDEBUG -O2 -g -finline-functions -Wa,--noexecstack -Wformat -Wformat-security \
-isystem$NDK/platforms/$PLATFORMVER/arch-arm/usr/include \
-isystem$NDK/sources/cxx-stl/gnu-libstdc++/$GCCVER/include \
-isystem$NDK/sources/cxx-stl/gnu-libstdc++/$GCCVER/libs/$ARCH/include \
$CFLAGS"




CXXFLAGS = $(CFLAGS) -std=c++11 -stdlib=libc++



OBJECTS = \
	colamd.o \
	commonlib.o \
	fortify.o \
	ini.o \
	lp_crash.o \
	lp_Hash.o \
	lp_lib.o \
	lp_LUSOL.o \
	lp_matrix.o \
	lp_MDO.o \
	lp_mipbb.o \
	lp_MPS.o \
	lp_params.o \
	lp_presolve.o \
	lp_price.o \
	lp_pricePSE.o \
	lp_report.o \
	lp_rlp.o \
	lp_scale.o \
	lp_simplex.o \
	lp_solve.o \
	lp_SOS.o \
	lp_utils.o \
	lp_wlp.o \
	lusol.o \
	mmio.o \
	myblas.o \
	yacc_read.o


TARGET=lpsolve_${ARCH}.a

$(TARGET):$(OBJECTS)
	ar rs $(TARGET) $(OBJECTS)

clean:
	rm -rf $(TARGET) $(OBJECTS)
