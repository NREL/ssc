//Clear!
clear();

//Add weatherreader unit
weather = add_unit("weatherreader");
//Set weather parameters
set_value(weather, "file_name", "C:/SAM/2012.9.27/exelib/climate_files/CA Daggett.tm2");
set_value(weather, "track_mode", 0);
set_value(weather, "tilt", 0);
set_value(weather, "azimuth", 0);

cav_rec = add_unit("sam_lf_st_pt_type232");
out("cav_rec_unit = ", cav_rec,"\n");

//Read in flux file
f = open( 'C:/Documents and Settings/tneises/Desktop/Cavity Receiver - Soenke/fluxmap.csv', 'r' );
if( !f )
{
	outln("Could not open file for reading");
	exit;
}

line = 'string';
i = 1;

while( read_line(f, line) )
{
	if( line == ' Azimuth,Zenith' ) 	
	{
		break;
	}
	i++;
	if( i > 200 ) 	
	{
		break;
	}
}

num_sol_pos = i - 5;
arr_sol_pos = alloc( 2, num_sol_pos );

close( f );
f = open( 'C:/Documents and Settings/tneises/Desktop/Cavity Receiver - Soenke/fluxmap.csv', 'r' );

for( i = 0; i < 4; i++ )
{
	read_line(f, line);
}

for( i = 0; i < num_sol_pos; i++ )
{
	read_line( f, line );
	parts = split( line, ',' );
	arr_sol_pos[0][i] = parts[2];
	arr_sol_pos[1][i] = parts[3];
	out(arr_sol_pos[0][i], arr_sol_pos[1][i], "\n");
}

arr_flux = alloc( num_sol_pos, 120 );

for( i = 0; i < 3; i++ )
	read_line(f, line);

for( i = 0; i < num_sol_pos; i++ )
{
	for( j = 0; j < 10; j++ )
	{
		read_line( f, line );
		outln(line);
		parts = split( line, ',' );
		for( k = 0; k < 12; k++ )
		{
			arr_flux[i][(j*12+k)] = parts[k];
		}
	}
	outln(' ');
	if( i < (num_sol_pos - 1))
	{
		for( l = 0; l < 5; l++ )
		{	
			read_line( f, line );
		}
	}
}

//Set controller parameters
set_value(cav_rec, "rec_d_spec", 28.0); 
set_value(cav_rec, "h_rec", 28.743);
set_value(cav_rec, "h_lip", 3.09);
set_value(cav_rec, "h_tower", 287.91);
set_value(cav_rec, "rec_angle", 180.0); 
set_value(cav_rec, "d_tube_out", 40.0);
set_value(cav_rec, "th_tube", 1.25);
set_value(cav_rec, "eta_pump", 0.85);
set_value(cav_rec, "hel_stow", 8.0); 
set_value(cav_rec, "flow_pattern", 6);
set_value(cav_rec, "htf", 17);
set_value(cav_rec, "field_fl_props", [0]);
set_value(cav_rec, "material", 2);
set_value(cav_rec, "hl_ffact", 1.0);
set_value(cav_rec, "T_htf_hot_des", 574.0);
set_value(cav_rec, "T_htf_cold_des", 290.0);
set_value(cav_rec, "f_rec_min", 0.25);
set_value(cav_rec, "q_rec_des", 514.118);
set_value(cav_rec, "rec_su_delay", 0.2);
set_value(cav_rec, "rec_qf_delay", 0.25);
set_value(cav_rec, "conv_model", 2);
set_value(cav_rec, "m_dot_htf_max", 5.767E6);
set_value(cav_rec, "eps_wavelength", [[4, 1, 1], [100,1,1]]);
set_value(cav_rec, "conv_coupled", 2);
set_value(cav_rec, "conv_forced", 0);
set_value(cav_rec, "h_wind_meas", 10.0);
set_value(cav_rec, "conv_wind_dir", 0);
set_value(cav_rec, "fluxmap_angles", arr_sol_pos);
set_value(cav_rec, "fluxmap", arr_flux);

//Connect weather reader to controller
connect(weather, "solazi", cav_rec, "azimuth");
connect(weather, "solzen", cav_rec, "zenith");
connect(weather, "beam", cav_rec, "I_bn");
connect(weather, "hour", cav_rec, "hour");
connect(weather, "tdew", cav_rec, "T_dp");
connect(weather, "tdry", cav_rec, "T_amb");
connect(weather, "wspd", cav_rec, "u_wind");
connect(weather, "wdir", cav_rec, "deg_wind");

//Set remaining values to TRNSYS inputs at time == 36
set_value(cav_rec, "T_htf_hot", 574.0);
set_value(cav_rec, "T_htf_cold", 288.2291);
set_value(cav_rec, "P_htf", 1.0);
set_value(cav_rec, "P_amb", 0.9434986);
set_value(cav_rec, "eta_field", 0.435806);


//Simulate
simulate(1.0, 1000.0, 1.0);