clear();

// Change Log
// 7/17/14: Removed UA_recup_des as parameter. Will be calculated based on PHX cold and hot side temps

// Values from ssc example (7/17/14)
W_dot_net_des = 111.0;		//[MW] Design cycle power output
eta_c = 0.89;				//[-] Compressor Isentropic Efficiency
eta_t = 0.93;				//[-] Turbine Isentropic Efficiency
P_high_limit = 25.0;		//[MPa] High pressure limit in cycle
delta_T_rec_in = 5;		    //[C]

delta_T_acc = 18;
T_amb_des = 32.0;
fan_power_perc = 1.0;
plant_elevation = 0.0;

T_htf_hot_des = 574.0;
T_htf_cold_est = 290.0;
eta_des = 0.412;
rec_htf = 17;

startup_frac = 0.5;
startup_time = 0.5;
q_sby_frac = 0.2;
cycle_cutoff_frac = 0.35;

powercycle = add_unit("sam_sco2_recomp_type424");
set_value(powercycle, "W_dot_net_des", W_dot_net_des);
set_value(powercycle, "eta_c", eta_c);
set_value(powercycle, "eta_t", eta_t);
set_value(powercycle, "P_high_limit", P_high_limit);
set_value(powercycle, "deltaT_PHX", delta_T_rec_in);

set_value(powercycle, "deltaT_ACC", delta_T_acc);
set_value(powercycle, "T_amb_des", T_amb_des);				//[C]
set_value(powercycle, "fan_power_perc", fan_power_perc);	//[%]
set_value(powercycle, "plant_elevation", plant_elevation);	//[m]

set_value(powercycle, "T_htf_hot_des", T_htf_hot_des);			    //[C]
set_value(powercycle, "T_htf_cold_est", T_htf_cold_est);    //[C]
set_value(powercycle, "eta_des", eta_des);					//[C]
set_value(powercycle, "rec_htf", rec_htf);                  //[-]

set_value(powercycle, "startup_frac", startup_frac);
set_value(powercycle, "startup_time", startup_time);
set_value(powercycle, "q_sby_frac", q_sby_frac);
set_value(powercycle, "cycle_cutoff_frac", cycle_cutoff_frac);		//[-]

sim_result = simulate(1.0, 2.0, 1.0);

exit;
 
T_rec_in_low = 400;
T_rec_in_high = 570;
N_rec_in_temps = (T_rec_in_high-T_rec_in_low)/delta_T_rec_in + 1;

//**********************
 N_rec_in_temps = 1;
//**********************

T_rec_in = alloc(N_rec_in_temps);
eta_cycle_des = alloc(N_rec_in_temps);
P_low_des = alloc(N_rec_in_temps);
f_recomp_des = alloc(N_rec_in_temps);
Q_dot_calc_des = alloc(N_rec_in_temps);
UA_recup_des = alloc(N_rec_in_temps);
T_cooler_in_des = alloc(N_rec_in_temps);
cooler_volume = alloc(N_rec_in_temps);
time = alloc(N_rec_in_temps);

// Output file directory
file_name = 'c:/Users/tneises/Documents/Brayton-Rankine/TCS Type424 Integration/Receiver inlet temp parametric/rec_in_temp.txt';
file_int = open(file_name, 'w');
headers = "T_rec_in,eta_cycle_des,P_low_des,f_recomp_des,Q_dot_calc_des,UA_recup_des,T_cooler_in_des,cooler_volume,time";
outln(file_name, " headers were successful? ", write_line(file_int,headers));

for(i=0;i<N_rec_in_temps;i++)
{
	// Define inputs that are changing every parametric run
	T_rec_in[i] = T_rec_in_low + delta_T_rec_in*i;
	
	// Reset input values in unit
	set_value(powercycle, "T_rec_cold", T_rec_in[i]);     //[C]
	
	start_timer();
	sim_result = simulate(1.0, 2.0, 1.0);
	
	if(sim_result != 0)
		break;
	
	time[i] = elapsed_time()/1000.0;

	eta_cycle_des[i] = get_result(powercycle, "eta_cycle_des")[0];
	P_low_des[i] = get_result(powercycle, "P_low_des")[0];
	f_recomp_des[i] = get_result(powercycle, "f_recomp_des")[0];
	Q_dot_calc_des[i] = get_result(powercycle, "Q_dot_calc_des")[0];
	UA_recup_des[i] = get_result(powercycle, "UA_recup_des")[0];
	T_cooler_in_des[i] = get_result(powercycle, "T_cooler_in_des")[0];
	cooler_volume[i] = get_result(powercycle, "cooler_volume")[0];
	
	// Write outputs to file
	outln(write_line(file_int,(to_string(T_rec_in[i])+","+to_string(eta_cycle_des[i])+","+to_string(P_low_des[i])+","+to_string(f_recomp_des[i])+","+to_string(Q_dot_calc_des[i])+","+to_string(UA_recup_des[i])+","+to_string(T_cooler_in_des[i])+","+to_string(cooler_volume[i])+","+to_string(time[i]))));		
	
	// Check arrays
	outln("Receiver inlet temperatuare = ", T_rec_in[i]);
	outln("Cycle thermal efficiency at design = ", eta_cycle_des[i]);
	// outln("Compressor inlet pressure = ", P_low_des[i]);
}