clear();

// Define location of tcs directory
tcs_dir = 'C:/Users/tneises/Documents/Projects/ssc';

debug_mode = true;

//Add weather file reader unit
if(debug_mode) weather = add_unit("trnsys_weatherreader");
else weather = add_unit("weatherreader");

//Add the solar field collector unit
solarfield = add_unit("sam_mw_trough_type250");
//Add the controller unit
controller = add_unit("sam_mw_trough_type251");
//Add the power block unit
powerblock = add_unit("sam_mw_pt_type224");
//E_net calculator
enet = add_unit("sam_mw_csp_SumCalcs");


if(debug_mode)
{
	file_loc = tcs_dir + '/tcs/Conversion_Coordination/Debugging/tucson_trnsys_weather.out';
	set_value( weather, "file_name", file_loc );
	set_value( weather, "i_hour", "TIME" );
	set_value( weather, "i_month", "month" );
	set_value( weather, "i_day", "day" );
	set_value( weather, "i_global", "GlobalHorizontal" );
	set_value( weather, "i_beam", "DNI" );
	set_value( weather, "i_diff", "DiffuseHorizontal" );
	set_value( weather, "i_tdry", "T_dry" );
	set_value( weather, "i_twet", "T_wet" );
	set_value( weather, "i_tdew", "T_dew" );
	set_value( weather, "i_wspd", "WindSpeed" );
	set_value( weather, "i_wdir", "WindDir" );
	set_value( weather, "i_rhum", "RelHum" );
	set_value( weather, "i_pres", "AtmPres" );
	set_value( weather, "i_snow", "SnowCover" );
	set_value( weather, "i_albedo", "GroundAlbedo" );
	set_value( weather, "i_poa", "POA" );
	set_value( weather, "i_solazi", "Azimuth" );
	set_value( weather, "i_solzen", "Zenith" );
	set_value( weather, "i_lat", "Latitude" );
	set_value( weather, "i_lon", "Longitude" );
	set_value( weather, "i_shift", "Shift" );
}
else
{
	//Set weather parameters
	weather_file = "C:/SAM/2012.5.11/exelib/climate_files/AZ Tucson.tm2";
	if (ostype() == 'osx64') weather_file = '/Users/adobos/Projects/ssc/examples/daggett.tm2';

	set_value(weather, "file_name", weather_file);
	set_value(weather, "track_mode", 1);
	set_value(weather, "tilt", 0);
	set_value(weather, "azimuth", 0);
}

//Set parameters
set_value(solarfield, "nSCA", 8);
set_value(solarfield, "nHCEt", 4);
set_value(solarfield, "nColt", 4);
set_value(solarfield, "nHCEVar", 4);
set_value(solarfield, "nLoops", 230);
set_value(solarfield, "eta_pump", 0.85);
set_value(solarfield, "HDR_rough", 4.57E-05);
set_value(solarfield, "theta_stow", 170);
set_value(solarfield, "theta_dep", 10);
set_value(solarfield, "Row_Distance", 15);
set_value(solarfield, "FieldConfig", 2);
set_value(solarfield, "T_startup", 300);
set_value(solarfield, "pb_rated_cap", 111);
set_value(solarfield, "m_dot_htfmin", 1);
set_value(solarfield, "m_dot_htfmax", 12);
set_value(solarfield, "T_loop_in_des", 293);
set_value(solarfield, "T_loop_out", 391);
set_value(solarfield, "Fluid", 21);
set_value(solarfield, "T_field_ini", 150);
set_value(solarfield, "T_fp", 150);
set_value(solarfield, "I_bn_des", 950);
set_value(solarfield, "V_hdr_max", 3);
set_value(solarfield, "V_hdr_min", 2);
set_value(solarfield, "Pipe_hl_coef", 0.45);
set_value(solarfield, "SCA_drives_elec", 125);
set_value(solarfield, "fthrok", 1);
set_value(solarfield, "fthrctrl", 2);
set_value(solarfield, "ColTilt", 0);
set_value(solarfield, "ColAz", 0);
set_value(solarfield, "accept_mode", 0);
set_value(solarfield, "accept_init", 0);
set_value(solarfield, "accept_loc", 1);
set_value(solarfield, "solar_mult", 2);
set_value(solarfield, "mc_bal_hot", 0.2);
set_value(solarfield, "mc_bal_cold", 0.2);
set_value(solarfield, "mc_bal_sca", 4.5);
set_value(solarfield, "OptCharType", [1,1,1,1]);
set_value(solarfield, "CollectorType", [1,1,1,1]);
set_value(solarfield, "W_aperture", [5,5,5,5]);
set_value(solarfield, "A_aperture", [470.3,470.3,470.3,470.3]);
set_value(solarfield, "IamF0", [1,1,1,1]);
set_value(solarfield, "IamF1", [0.0506,0.0506,0.0506,0.0506]);
set_value(solarfield, "IamF2", [-0.1763,-0.1763,-0.1763,-0.1763]);
set_value(solarfield, "reflectivity", [1,1,1,1]);
set_value(solarfield, "TrackingError", [0.994,0.994,0.994,0.994]);
set_value(solarfield, "GeomEffects", [0.98,0.98,0.98,0.98]);
set_value(solarfield, "Rho_mirror_clean", [0.935,0.935,0.935,0.935]);
set_value(solarfield, "Dirt_mirror", [0.95,0.95,0.95,0.95]);
set_value(solarfield, "Error", [0.99,0.99,0.99,0.99]);
set_value(solarfield, "Ave_Focal_Length", [1.8,1.8,1.8,1.8]);
set_value(solarfield, "L_SCA", [100,100,100,100]);
set_value(solarfield, "L_aperture", [8.33333,8.33333,8.33333,8.33333]);
set_value(solarfield, "ColperSCA", [12,12,12,12]);
set_value(solarfield, "Distance_SCA", [1,1,1,1]);
set_value(solarfield, "HCE_FieldFrac", [[0.985,0.01,0.005,0],[0.985,0.01,0.005,0],[0.985,0.01,0.005,0],[0.985,0.01,0.005,0]]);
set_value(solarfield, "D_2", [[0.066,0.066,0.066,0.066],[0.066,0.066,0.066,0.066],[0.066,0.066,0.066,0.066],[0.066,0.066,0.066,0.066]]);
set_value(solarfield, "D_3", [[0.07,0.07,0.07,0.07],[0.07,0.07,0.07,0.07],[0.07,0.07,0.07,0.07],[0.07,0.07,0.07,0.07]]);
set_value(solarfield, "D_4", [[0.115,0.115,0.115,0.115],[0.115,0.115,0.115,0.115],[0.115,0.115,0.115,0.115],[0.115,0.115,0.115,0.115]]);
set_value(solarfield, "D_5", [[0.12,0.12,0.12,0.12],[0.12,0.12,0.12,0.12],[0.12,0.12,0.12,0.12],[0.12,0.12,0.12,0.12]]);
set_value(solarfield, "D_p", [[0,0,0,0],[0,0,0,0],[0,0,0,0],[0,0,0,0]]);
set_value(solarfield, "Flow_type", [[1,1,1,1],[1,1,1,1],[1,1,1,1],[1,1,1,1]]);
set_value(solarfield, "Rough", [[4.50E-05,4.50E-05,4.50E-05,4.50E-05],[4.50E-05,4.50E-05,4.50E-05,4.50E-05],[4.50E-05,4.50E-05,4.50E-05,4.50E-05],[4.50E-05,4.50E-05,4.50E-05,4.50E-05]]);
set_value(solarfield, "alpha_env", [[0.02,0.02,0,0],[0.02,0.02,0,0],[0.02,0.02,0,0],[0.02,0.02,0,0]]);
set_value(solarfield, "epsilon_3_11", [[100,150,200,250,300,350,400,450,500],[0.064,0.0665,0.07,0.0745,0.08,0.0865,0.094,0.1025,0.112]]);
set_value(solarfield, "epsilon_3_12", [[0],[0.65]]);
set_value(solarfield, "epsilon_3_13", [[0],[0.65]]);
set_value(solarfield, "epsilon_3_14", [[0],[0]]);
set_value(solarfield, "epsilon_3_21", [[100,150,200,250,300,350,400,450,500],[0.064,0.0665,0.07,0.0745,0.08,0.0865,0.094,0.1025,0.112]]);
set_value(solarfield, "epsilon_3_22", [[0],[0.65]]);
set_value(solarfield, "epsilon_3_23", [[0],[0.65]]);
set_value(solarfield, "epsilon_3_24", [[0],[0]]);
set_value(solarfield, "epsilon_3_31", [[100,150,200,250,300,350,400,450,500],[0.064,0.0665,0.07,0.0745,0.08,0.0865,0.094,0.1025,0.112]]);
set_value(solarfield, "epsilon_3_32", [[0],[0.65]]);
set_value(solarfield, "epsilon_3_33", [[0],[0.65]]);
set_value(solarfield, "epsilon_3_34", [[0],[0]]);
set_value(solarfield, "epsilon_3_41", [[100,150,200,250,300,350,400,450,500],[0.064,0.0665,0.07,0.0745,0.08,0.0865,0.094,0.1025,0.112]]);
set_value(solarfield, "epsilon_3_42", [[0],[0.65]]);
set_value(solarfield, "epsilon_3_43", [[0],[0.65]]);
set_value(solarfield, "epsilon_3_44", [[0],[0]]);
set_value(solarfield, "alpha_abs", [[0.96,0.96,0.8,0],[0.96,0.96,0.8,0],[0.96,0.96,0.8,0],[0.96,0.96,0.8,0]]);
set_value(solarfield, "Tau_envelope", [[0.963,0.963,1,0],[0.963,0.963,1,0],[0.963,0.963,1,0],[0.963,0.963,1,0]]);
set_value(solarfield, "EPSILON_4", [[0.86,0.86,1,0],[0.86,0.86,1,0],[0.86,0.86,1,0],[0.86,0.86,1,0]]);
set_value(solarfield, "EPSILON_5", [[0.86,0.86,1,0],[0.86,0.86,1,0],[0.86,0.86,1,0],[0.86,0.86,1,0]]);
set_value(solarfield, "GlazingIntactIn", [[1,1,0,1],[1,1,0,1],[1,1,0,1],[1,1,0,1]]);
set_value(solarfield, "P_a", [[0.0001,750,750,0],[0.0001,750,750,0],[0.0001,750,750,0],[0.0001,750,750,0]]);
set_value(solarfield, "AnnulusGas", [[27,1,1,27],[27,1,1,27],[27,1,1,27],[27,1,1,27]]);
set_value(solarfield, "AbsorberMaterial", [[1,1,1,1],[1,1,1,1],[1,1,1,1],[1,1,1,1]]);
set_value(solarfield, "Shadowing", [[0.96,0.96,0.96,0.963],[0.96,0.96,0.96,0.963],[0.96,0.96,0.96,0.963],[0.96,0.96,0.96,0.963]]);
set_value(solarfield, "Dirt_HCE", [[0.98,0.98,1,0.98],[0.98,0.98,1,0.98],[0.98,0.98,1,0.98],[0.98,0.98,1,0.98]]);
set_value(solarfield, "Design_loss", [[150,1100,1500,0],[150,1100,1500,0],[150,1100,1500,0],[150,1100,1500,0]]);
set_value(solarfield, "SCAInfoArray", [[1,1],[1,1],[1,1],[1,1],[1,1],[1,1],[1,1],[1,1]]);
set_value(solarfield, "SCADefocusArray", [8,7,6,5,4,3,2,1]);

//Set the initial values
set_value(solarfield, "I_b", 0.);
set_value(solarfield, "T_db", 15.);
set_value(solarfield, "V_wind", 1.5);
set_value(solarfield, "P_amb", 1.);
set_value(solarfield, "T_dp", 10.);
set_value(solarfield, "SolarAz", 0.);
set_value(solarfield, "defocus", 1.);
set_value(solarfield, "T_cold_in", 293.);
//Set the inputs
connect(weather, "beam", solarfield, "I_b", 0);
connect(weather, "tdry", solarfield, "T_db", 0);
connect(weather, "wspd", solarfield, "V_wind", 0);
connect(weather, "pres", solarfield, "P_amb", 0);
connect(weather, "tdew", solarfield, "T_dp", 0);
connect(weather, "solazi", solarfield, "SolarAz", 0);
connect(weather, "lat", solarfield, "latitude", 0);
connect(weather, "lon", solarfield, "longitude", 0);
connect(weather, "shift", solarfield, "shift", 0);
connect(controller, "defocus", solarfield, "defocus");
connect(controller, "T_field_in", solarfield, "T_cold_in");

//Set controller parameters
set_value(controller, "field_fluid", 21); 
set_value(controller, "field_fl_props", [0]);
set_value(controller, "store_fluid", 18);
set_value(controller, "tshours", 6);
set_value(controller, "is_hx", 1);
set_value(controller, "dt_hot", 5);
set_value(controller, "dt_cold", 7);
set_value(controller, "hx_config", 2);
set_value(controller, "q_max_aux", 294.118);
set_value(controller, "T_set_aux", 391);
set_value(controller, "V_tank_hot_ini", 1313.43);
set_value(controller, "T_tank_hot_ini", 300);
set_value(controller, "T_tank_cold_ini", 300);
set_value(controller, "vol_tank", 26268.7);
set_value(controller, "h_tank", 20);
set_value(controller, "h_tank_min", 1);
set_value(controller, "u_tank", 0.4);
set_value(controller, "tank_pairs", 1);
set_value(controller, "cold_tank_Thtr", 250);
set_value(controller, "hot_tank_Thtr", 365);
set_value(controller, "tank_max_heat", 25);
set_value(controller, "T_field_in_des", 293);
set_value(controller, "T_field_out_des", 391);
set_value(controller, "q_pb_design", 294.118);
set_value(controller, "W_pb_design", 111);
set_value(controller, "cycle_max_frac", 1.05);
set_value(controller, "cycle_cutoff_frac", 0.25);
set_value(controller, "solarm", 2);
set_value(controller, "pb_pump_coef", 0.55);
set_value(controller, "tes_pump_coef", 0.15);
set_value(controller, "pb_fixed_par", 0.0055);
set_value(controller, "bop_array", [0,1,0.483,0.517,0]);
set_value(controller, "aux_array", [0.02273,1,0.483,0.517,0]);
set_value(controller, "T_startup", 300);
set_value(controller, "fossil_mode", 1);
set_value(controller, "fthr_ok", 1);
set_value(controller, "nSCA", 8);
set_value(controller, "I_bn_des", 950);
set_value(controller, "fc_on", 0);
set_value(controller, "q_sby_frac", 0.2);
set_value(controller, "t_standby_reset", 2);
set_value(controller, "sf_type", 1);
set_value(controller, "tes_type", 1);
set_value(controller, "tslogic_a", [0,0,0,0,0,0,0,0,0]);
set_value(controller, "tslogic_b", [0,0,0,0,0,0,0,0,0]);
set_value(controller, "tslogic_c", [1.05,1,1,1,1,1,1,1,1]);
set_value(controller, "ffrac", [0,0,0,0,0,0,0,0,0]);
set_value(controller, "tc_fill", 7);
set_value(controller, "tc_void", 0.25);
set_value(controller, "t_dis_out_min", 500);
set_value(controller, "t_ch_out_max", 500);
set_value(controller, "nodes", 2000);
set_value(controller, "f_tc_cold", 2);

//Connect weather reader to controller
connect(weather, "beam", controller, "I_bn", 0);
connect(weather, "tdry", controller, "T_amb", 0);
connect(solarfield, "m_dot_avail", controller, "m_dot_field");
connect(powerblock, "m_dot_htf_ref", controller, "m_dot_htf_ref");
connect(solarfield, "T_sys_h", controller, "T_field_out");
connect(powerblock, "T_htf_cold", controller, "T_pb_out"); 
connect(powerblock, "m_dot_demand", controller, "m_pb_demand");
connect(solarfield, "E_bal_startup", controller, "q_startup");
//Set initial values
set_value(controller, "I_bn", 0.);
set_value(controller, "T_amb", 15.);
set_value(controller, "m_dot_field", 0.);
set_value(controller, "m_dot_htf_ref", 0.);
set_value(controller, "T_field_out", 391.);
set_value(controller, "T_pb_out", 293.);
set_value(controller, "m_pb_demand", 100000.);
set_value(controller, "q_startup", 0.);


//Set the parameters for the power block
set_value(powerblock, "P_ref", 111);
set_value(powerblock, "eta_ref", 0.3774);
set_value(powerblock, "T_htf_hot_ref", 391);
set_value(powerblock, "T_htf_cold_ref", 293);
set_value(powerblock, "dT_cw_ref", 10);
set_value(powerblock, "T_amb_des", 20);
set_value(powerblock, "HTF", 21);
set_value(powerblock, "q_sby_frac", 0.2);
set_value(powerblock, "P_boil", 100);
set_value(powerblock, "CT", 1);
set_value(powerblock, "startup_time", 0.5);
set_value(powerblock, "startup_frac", 0.2);
set_value(powerblock, "tech_type", 2);
set_value(powerblock, "T_approach", 5);
set_value(powerblock, "T_ITD_des", 16);
set_value(powerblock, "P_cond_ratio", 1.0028);
set_value(powerblock, "pb_bd_frac", 0.02);
set_value(powerblock, "P_cond_min", 1.25);
set_value(powerblock, "n_pl_inc", 2);
set_value(powerblock, "F_wc", [0,0,0,0,0,0,0,0,0]);

//Connect inputs
connect(weather, "twet", powerblock, "T_wb", 0);
connect(weather, "tdry", powerblock, "T_db", 0);
connect(weather, "pres", powerblock, "P_amb", 0);
connect(weather, "rhum", powerblock, "rh", 0);
set_value(powerblock, "mode", 2);	//Always set to 2 for type 251
connect(controller, "T_pb_in", powerblock, "T_htf_hot");
connect(controller, "m_dot_pb", powerblock, "m_dot_htf");
connect(controller, "m_dot_pb", powerblock, "demand_var");
connect(controller, "standby_control", powerblock, "standby_control");
connect(controller, "TOU", powerblock, "TOU");
//Set initial values
set_value(powerblock, "T_wb", 10.);
set_value(powerblock, "T_db", 15.);
set_value(powerblock, "P_amb", 1.);
set_value(powerblock, "rh", 0.25);
set_value(powerblock, "T_htf_hot", 391.0);
set_value(powerblock, "m_dot_htf", 0.);
set_value(powerblock, "demand_var", 110.);
set_value(powerblock, "standby_control", 0);
set_value(powerblock, "TOU", 1);

//Connect the enet calculator to the parasitic values
set_value(enet, "eta_lhv", 0.9);
set_value(enet, "eta_tes_htr", 0.98);
set_value(enet, "fp_mode", 1);
connect(powerblock, "P_cycle", enet, "W_cycle_gross");
connect(powerblock, "W_cool_par", enet, "W_par_heatrej");
connect(solarfield, "W_dot_pump", enet, "W_par_sf_pump");
connect(controller, "htf_pump_power", enet, "W_par_tes_pump");
connect(controller, "bop_par", enet, "W_par_BOP");
connect(controller, "fixed_par", enet, "W_par_fixed");
connect(solarfield, "SCA_par_tot", enet, "W_par_tracking");
connect(controller, "aux_par", enet, "W_par_aux_boiler");
connect(controller, "tank_fp_par", enet, "Q_par_tes_fp");
connect(solarfield, "E_fp_tot", enet, "Q_par_sf_fp");
connect(controller, "q_aux_heat", enet, "Q_aux_backup");

simulate(1,8760,1,30,false);

